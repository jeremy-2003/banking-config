server:
 port: 8082
eureka:
 client:
  service-url:
   defaultZone: http://localhost:8761/eureka
spring:
 application:
   name: account-service
 data:
   mongodb:
     uri: mongodb://localhost:27017/bankdb
   redis:
     host: localhost
     port: 6379
 kafka:
   bootstrap-servers: NTTD-3KDMY64:9092
   consumer:
     group-id: account-service-group
     key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
     value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
     auto-offset-reset: latest
     properties:
      spring.json.type.mapping: customer:com.bank.accountservice.model.customer.Customer
      spring.json.trusted.packages: "*"
      heartbeat.interval.ms: 3000
      session.timeout.ms: 10000
      max.poll.interval.ms: 300000
      reconnect.backoff.ms: 1000
      reconnect.backoff.max.ms: 10000
   producer:
     key-serializer: org.apache.kafka.common.serialization.StringSerializer
     value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
     properties:
      spring.json.type.mapping: account:com.bank.accountservice.model.account.Account
      spring.json.trusted.packages: "*"
customer-service:
 base-url: http://localhost:8080/api/customers
credit-service:
 base-url: http://localhost:8080/api
springdoc:
 api-docs:
   enabled: true
   path: /v3/api-docs
 swagger-ui:
   path: /swagger-ui.html
   operationsSorter: method
   tagsSorter: alpha
   docExpansion: none
management:
 endpoints:
   web:
     exposure:
       include: health, info, metrics, env
 endpoint:
   health:
     show-details: always
default-values:
 maintenanFee: 100
 minBalanceRequirement: 60
transaction-max:
 savings: 5
 checking: 4
 fixed-terms: 3
transaction-cost:
 savings: 5.50
 checking: 4.20
 fixed-terms: 8.50
